[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:[m[K In lambda function:
[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:27:140:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
                 if(Eigen::Vector2d(p.pose.position.x - s.pose.position.x, p.pose.position.y - s.pose.position.y).norm()<OPTIMIZE_TOLERANCE)) return false;
[01;32m[K                                                                                                                                            ^[m[K
[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:[m[K In lambda function:
[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:34:5:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
     },_1,_2));
[01;32m[K     ^[m[K
[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/ros/catkin_ws/src/multiple_robots_slam/exploration_support/src/poselog_optimizer_node.cpp:22:39:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator+[m[Kâ€™ (operand type is â€˜[01m[Kmain(int, char**)::<lambda(const PathConstPtr&, const PathConstPtr&)>[m[Kâ€™)
     sync.registerCallback(boost::bind(+[&](const nav_msgs::PathConstPtr& mp,const nav_msgs::PathConstPtr& sp)->void{
[01;32m[K                                       ^[m[K
make[2]: *** [CMakeFiles/poselog_optimizer.dir/src/poselog_optimizer_node.cpp.o] ã‚¨ãƒ©ãƒ¼ 1
make[1]: *** [CMakeFiles/poselog_optimizer.dir/all] ã‚¨ãƒ©ãƒ¼ 2
make: *** [all] ã‚¨ãƒ©ãƒ¼ 2
